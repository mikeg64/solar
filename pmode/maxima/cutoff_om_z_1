;;; -*- Mode: LISP; package:maxima; syntax:common-lisp; -*- 
(in-package :maxima)
(DSKSETQ $%I1
         '((MSETQ) (($OM1) $Z)
           ((%SQRT)
            ((MPLUS) ((MTIMES) (($OM0) $Z) (($OM0) $Z))
             ((MTIMES) ((MQUOTIENT) ((MTIMES) %GAMMA $G) 2.)
              ((MTIMES)
               ((MQUOTIENT) 1. ((MTIMES) (($CS) $Z) (($CS) $Z)))
               (($DIFF) ((MTIMES) (($CS) $Z) (($CS) $Z)) $Z))))))) 
(ADDLABEL '$%I1) 
(DSKSETQ $%I2
         '((MDEFINE) (($OM1) $Z)
           ((%SQRT)
            ((MPLUS) ((MTIMES) (($OM0) $Z) (($OM0) $Z))
             ((MTIMES) ((MQUOTIENT) ((MTIMES) %GAMMA $G) 2.)
              ((MTIMES)
               ((MQUOTIENT) 1. ((MTIMES) (($CS) $Z) (($CS) $Z)))
               (($DIFF) ((MTIMES) (($CS) $Z) (($CS) $Z)) $Z))))))) 
(ADDLABEL '$%I2) 
(DSKSETQ $%O2
         '((MDEFINE SIMP) (($OM1) $Z)
           ((%SQRT)
            ((MPLUS) ((MTIMES) (($OM0) $Z) (($OM0) $Z))
             ((MTIMES) ((MQUOTIENT) ((MTIMES) %GAMMA $G) 2.)
              ((MTIMES)
               ((MQUOTIENT) 1. ((MTIMES) (($CS) $Z) (($CS) $Z)))
               (($DIFF) ((MTIMES) (($CS) $Z) (($CS) $Z)) $Z))))))) 
(ADDLABEL '$%O2) 
(DSKSETQ $%I3
         '((MDEFINE) (($OM0) $Z)
           ((MQUOTIENT) ((MTIMES) %GAMMA $G) ((MTIMES) 2. (($CS) $Z))))) 
(ADDLABEL '$%I3) 
(DSKSETQ $%O3
         '((MDEFINE SIMP) (($OM0) $Z)
           ((MQUOTIENT) ((MTIMES) %GAMMA $G) ((MTIMES) 2. (($CS) $Z))))) 
(ADDLABEL '$%O3) 
(DSKSETQ $%I4 '(($OM1) $Z)) 
(ADDLABEL '$%I4) 
(DSKSETQ $%O4
         '((MEXPT SIMP)
           ((MPLUS SIMP)
            ((MTIMES SIMP) $G ((MEXPT SIMP) (($CS SIMP) $Z) -1.)
             ((%DERIVATIVE SIMP) (($CS SIMP) $Z) $Z 1.) %GAMMA)
            ((MTIMES SIMP) ((RAT SIMP) 1. 4.) ((MEXPT SIMP) $G 2.)
             ((MEXPT SIMP) (($CS SIMP) $Z) -2.)
             ((MEXPT SIMP) %GAMMA 2.)))
           ((RAT SIMP) 1. 2.))) 
(ADDLABEL '$%O4) 
(DSKSETQ $%I5
         '((MDEFINE) (($Q1) $OM $Z)
           ((MQUOTIENT)
            ((MPLUS) ((MEXPT) $OM 2.)
             ((MMINUS) ((MTIMES) (($OM1) $Z) (($OM1) $Z))))
            ((MTIMES) (($CS) $Z) (($CS) $Z))))) 
(ADDLABEL '$%I5) 
(DSKSETQ $%O5
         '((MDEFINE SIMP) (($Q1) $OM $Z)
           ((MQUOTIENT)
            ((MPLUS) ((MEXPT) $OM 2.)
             ((MMINUS) ((MTIMES) (($OM1) $Z) (($OM1) $Z))))
            ((MTIMES) (($CS) $Z) (($CS) $Z))))) 
(ADDLABEL '$%O5) 
(DSKSETQ $%I6 '$FUNCTIONS) 
(ADDLABEL '$%I6) 
(DSKSETQ $%O6 '((MLIST SIMP) (($OM1) $Z) (($OM0) $Z) (($Q1) $OM $Z))) 
(ADDLABEL '$%O6) 
(MDEFPROP $OM1
    ((LAMBDA) ((MLIST) $Z)
     ((%SQRT)
      ((MPLUS) ((MTIMES) (($OM0) $Z) (($OM0) $Z))
       ((MTIMES) ((MQUOTIENT) ((MTIMES) %GAMMA $G) 2.)
        ((MTIMES) ((MQUOTIENT) 1. ((MTIMES) (($CS) $Z) (($CS) $Z)))
         (($DIFF) ((MTIMES) (($CS) $Z) (($CS) $Z)) $Z))))))
    MEXPR) 
(ADD2LNC '(($OM1) $Z) $FUNCTIONS) 
(MDEFPROP $OM0
    ((LAMBDA) ((MLIST) $Z)
     ((MQUOTIENT) ((MTIMES) %GAMMA $G) ((MTIMES) 2. (($CS) $Z))))
    MEXPR) 
(ADD2LNC '(($OM0) $Z) $FUNCTIONS) 
(MDEFPROP $Q1
    ((LAMBDA) ((MLIST) $OM $Z)
     ((MQUOTIENT)
      ((MPLUS) ((MEXPT) $OM 2.)
       ((MMINUS) ((MTIMES) (($OM1) $Z) (($OM1) $Z))))
      ((MTIMES) (($CS) $Z) (($CS) $Z))))
    MEXPR) 
(ADD2LNC '(($Q1) $OM $Z) $FUNCTIONS) 
(MDEFPROP $NSET (NIL $VERSION 1.21) $PROPS) 
(ADD2LNC '$NSET $PROPS) 
(DEFPROP ${ %{ VERB) 
(DEFPROP ${ "{" OP) 
(SETF (GETHASH "{" *OPR-TABLE*) '${) 
(ADD2LNC '"{" $PROPS) 
(DEFPROP %{ ${ NOUN) 
(DEFPROP $} "}" OP) 
(SETF (GETHASH "}" *OPR-TABLE*) '$}) 
(ADD2LNC '"}" $PROPS) 
(MDEFPROP $TRYLEVEL (NIL $MAXMIN 1.) $PROPS) 
(ADD2LNC '$TRYLEVEL $PROPS) 
(MDEFPROP $MAXMIN (NIL $VERSION 1.) $PROPS) 
(ADD2LNC '$MAXMIN $PROPS) 
(MDEFPROP $NUMMOD (NIL $VERSION 3.) $PROPS) 
(ADD2LNC '$NUMMOD $PROPS) 
(DEFPROP $CONJUGATE SIMP-CONJUGATE OPERATORS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(MDEFPROP $CONJUGATE (NIL $VERSION 1.) $PROPS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(DEFPROP %ERF_GENERALIZED $ERF_GENERALIZED NOUN) 
(DEFPROP %ERF_GENERALIZED SIMP-ERF-GENERALIZED OPERATORS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T OPERS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T $ANTISYMMETRIC) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP $ERF_GENERALIZED %ERF_GENERALIZED VERB) 
(DEFPROP $BETA SIMPBETA OPERATORS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T OPERS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T $SYMMETRIC) 
(ADD2LNC '$BETA $PROPS) 
(DSKSETQ (($EF_DATA) $EXPONENT $REDUCTION $PRIMITIVE $CARDINALITY
          $ORDER $FACTORS_OF_ORDER)
         '(($EF_DATA SIMP) $EXPONENT $REDUCTION $PRIMITIVE $CARDINALITY
           $ORDER $FACTORS_OF_ORDER)) 
(SETQ $LINENUM 7.) 
(SETQ *ALPHABET* (NCONC '(#\_ #\%) *ALPHABET*)) 
(ADD2LNC '$INTEGERVALUED $FEATURES) 