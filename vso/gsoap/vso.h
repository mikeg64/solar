// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* vso.h
   Generated by wsdl2h 2.8.21 from VSOi_rpc_literal.wsdl and typemap.dat
   2014-12-18 19:50:30 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on vso.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://virtualsolar.org/VSO/VSOi                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://virtualsolar.org/VSO/VSOi"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://virtualsolar.org/VSO/VSOi"
//gsoap ns1   schema namespace:	http://virtualsolar.org/VSO/VSOi
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://virtualsolar.org/VSO/VSOi                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://virtualsolar.org/VSO/VSOi                                         *
 *                                                                            *
\******************************************************************************/

/// @brief "http://virtualsolar.org/VSO/VSOi":QueryRequest is a complexType.
///
struct ns1__QueryRequest
{
/// Element "version" of XSD type xs:float.
    float*                               version                        0;	///< Optional element.
/// Element "block" of XSD type "http://virtualsolar.org/VSO/VSOi":QueryRequestBlock.
    struct ns1__QueryRequestBlock*       block                          1;	///< Required element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":QueryRequestBlock is a complexType.
///
struct ns1__QueryRequestBlock
{
/// Element "time" of XSD type "http://virtualsolar.org/VSO/VSOi":Time.
    struct ns1__Time*                    time                           1;	///< Required element.
/// Element "provider" of XSD type xs:string.
    char*                                provider                       0;	///< Optional element.
/// Element "source" of XSD type xs:string.
    char*                                source                         0;	///< Optional element.
/// Element "instrument" of XSD type xs:string.
    char*                                instrument                     0;	///< Optional element.
/// Element "physobs" of XSD type xs:string.
    char*                                physobs                        0;	///< Optional element.
/// Element "wave" of XSD type "http://virtualsolar.org/VSO/VSOi":Wave.
    struct ns1__Wave*                    wave                           0;	///< Optional element.
/// Element "extent" of XSD type "http://virtualsolar.org/VSO/VSOi":Extent.
    struct ns1__Extent*                  extent                         0;	///< Optional element.
/// Element "field" of XSD type "http://virtualsolar.org/VSO/VSOi":Field.
    struct ns1__Field*                   field                          0;	///< Optional element.
/// Element "pixels" of XSD type xs:string.
    char*                                pixels                         0;	///< Optional element.
/// Element "level" of XSD type xs:string.
    char*                                level                          0;	///< Optional element.
/// Element "resolution" of XSD type xs:string.
    char*                                resolution                     0;	///< Optional element.
/// Element "detector" of XSD type xs:string.
    char*                                detector                       0;	///< Optional element.
/// Element "filter" of XSD type xs:string.
    char*                                filter                         0;	///< Optional element.
/// Element "sample" of XSD type xs:string.
    char*                                sample                         0;	///< Optional element.
/// Element "quicklook" of XSD type xs:string.
    char*                                quicklook                      0;	///< Optional element.
/// Element "pscale" of XSD type xs:string.
    char*                                pscale                         0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":Time is a complexType.
///
struct ns1__Time
{
/// Element "start" of XSD type xs:string.
    char*                                start                          1;	///< Required element.
/// Element "end" of XSD type xs:string.
    char*                                end                            1;	///< Required element.
/// Element "near" of XSD type xs:string.
    char*                                near                           0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":Wave is a complexType.
///
struct ns1__Wave
{
/// Element "wavemin" of XSD type xs:string.
    char*                                wavemin                        1;	///< Required element.
/// Element "wavemax" of XSD type xs:string.
    char*                                wavemax                        1;	///< Required element.
/// Element "waveunit" of XSD type xs:string.
    char*                                waveunit                       1;	///< Required element.
/// Element "wavetype" of XSD type xs:string.
    char*                                wavetype                       0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":Extent is a complexType.
///
struct ns1__Extent
{
/// Element "x" of XSD type xs:string.
    char*                                x                              0;	///< Optional element.
/// Element "y" of XSD type xs:string.
    char*                                y                              0;	///< Optional element.
/// Element "width" of XSD type xs:string.
    char*                                width                          0;	///< Optional element.
/// Element "length" of XSD type xs:string.
    char*                                length                         0;	///< Optional element.
/// Element "type" of XSD type xs:string.
    char*                                type                           0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":Field is a complexType.
///
struct ns1__Field
{
/// Size of array of char** is 0..unbounded.
   $int                                  __sizefielditem                0;
/// Array char** of size 0..unbounded.
    char**                               fielditem                      0;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":QueryResponse is a complexType.
///
struct ns1__QueryResponse
{
/// Size of array of struct ns1__ProviderQueryResponse* is 0..unbounded.
   $int                                  __sizeprovideritem             0;
/// Array struct ns1__ProviderQueryResponse* of size 0..unbounded.
    struct ns1__ProviderQueryResponse*   provideritem                   0;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":ProviderQueryResponse is a complexType.
///
struct ns1__ProviderQueryResponse
{
/// Element "version" of XSD type xs:float.
    float                                version                        1;	///< Required element.
/// Element "provider" of XSD type xs:string.
    char*                                provider                       0;	///< Optional element.
/// Element "no_of_records_found" of XSD type xs:int.
    int*                                 no_USCOREof_USCORErecords_USCOREfound 0;	///< Optional element.
/// Element "no_of_records_returned" of XSD type xs:int.
    int*                                 no_USCOREof_USCORErecords_USCOREreturned 0;	///< Optional element.
/// Element "record" of XSD type "http://virtualsolar.org/VSO/VSOi":QueryResponseBlockArray.
    struct ns1__QueryResponseBlockArray*  record                         0;	///< Optional element.
/// Element "error" of XSD type xs:string.
    char*                                error                          0;	///< Optional element.
/// Element "debug" of XSD type xs:string.
    char*                                debug                          0;	///< Optional element.
/// Element "status" of XSD type xs:string.
    char*                                status                         0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":QueryResponseBlockArray is a complexType.
///
struct ns1__QueryResponseBlockArray
{
/// Size of array of struct ns1__QueryResponseBlock* is 0..unbounded.
   $int                                  __sizerecorditem               0;
/// Array struct ns1__QueryResponseBlock* of size 0..unbounded.
    struct ns1__QueryResponseBlock*      recorditem                     0;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":QueryResponseBlock is a complexType.
///
struct ns1__QueryResponseBlock
{
/// Element "provider" of XSD type xs:string.
    char*                                provider                       1;	///< Required element.
/// Element "source" of XSD type xs:string.
    char*                                source                         0;	///< Optional element.
/// Element "instrument" of XSD type xs:string.
    char*                                instrument                     0;	///< Optional element.
/// Element "physobs" of XSD type xs:string.
    char*                                physobs                        0;	///< Optional element.
/// Element "time" of XSD type "http://virtualsolar.org/VSO/VSOi":Time.
    struct ns1__Time*                    time                           1;	///< Required element.
/// Element "wave" of XSD type "http://virtualsolar.org/VSO/VSOi":Wave.
    struct ns1__Wave*                    wave                           0;	///< Optional element.
/// Element "extent" of XSD type "http://virtualsolar.org/VSO/VSOi":Extent.
    struct ns1__Extent*                  extent                         0;	///< Optional element.
/// Element "size" of XSD type xs:float.
    float*                               size                           0;	///< Optional element.
/// Element "extra" of XSD type "http://virtualsolar.org/VSO/VSOi":Extra.
    struct ns1__Extra*                   extra                          0;	///< Optional element.
/// Element "info" of XSD type xs:string.
    char*                                info                           0;	///< Optional element.
/// Element "datatype" of XSD type xs:string.
    char*                                datatype                       0;	///< Optional element.
/// Element "fileurl" of XSD type xs:string.
    char*                                fileurl                        0;	///< Optional element.
/// Element "fileid" of XSD type xs:string.
    char*                                fileid                         0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":Extra is a complexType.
///
struct ns1__Extra
{
/// Element "thumbnail" of XSD type "http://virtualsolar.org/VSO/VSOi":Thumbnail.
    struct ns1__Thumbnail*               thumbnail                      0;	///< Optional element.
/// Element "flags" of XSD type xs:string.
    char*                                flags                          0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":Thumbnail is a complexType.
///
struct ns1__Thumbnail
{
/// Element "hires" of XSD type xs:string.
    char*                                hires                          0;	///< Optional element.
/// Element "lowres" of XSD type xs:string.
    char*                                lowres                         0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":VSOGetDataRequest is a complexType.
///
struct ns1__VSOGetDataRequest
{
/// Element "version" of XSD type xs:string.
    char*                                version                        0;	///< Optional element.
/// Element "request" of XSD type "http://virtualsolar.org/VSO/VSOi":GetDataRequest.
    struct ns1__GetDataRequest*          request                        1;	///< Required element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":GetDataRequest is a complexType.
///
struct ns1__GetDataRequest
{
/// Element "method" of XSD type "http://virtualsolar.org/VSO/VSOi":MethodItem.
    struct ns1__MethodItem*              method                         0;	///< Optional element.
/// Element "info" of XSD type "http://virtualsolar.org/VSO/VSOi":Info.
    struct ns1__Info*                    info                           0;	///< Optional element.
/// Element "datacontainer" of XSD type "http://virtualsolar.org/VSO/VSOi":DataContainer.
    struct ns1__DataContainer*           datacontainer                  0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":MethodItem is a complexType.
///
struct ns1__MethodItem
{
/// Size of array of char** is 1..unbounded.
   $int                                  __sizemethodtype               1;
/// Array char** of size 1..unbounded.
    char**                               methodtype                     1;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":Info is a complexType.
///
struct ns1__Info
{
/// Element "email" of XSD type xs:string.
    char*                                email                          1;	///< Required element.
/// Element "host" of XSD type xs:string.
    char*                                host                           0;	///< Optional element.
/// Element "user" of XSD type xs:string.
    char*                                user                           0;	///< Optional element.
/// Element "directory" of XSD type xs:string.
    char*                                directory                      0;	///< Optional element.
/// Element "password" of XSD type xs:string.
    char*                                password                       0;	///< Optional element.
/// Element "address" of XSD type xs:string.
    char*                                address                        0;	///< Optional element.
/// Element "required" of XSD type xs:string.
    char*                                required                       0;	///< Optional element.
/// Element "site" of XSD type xs:string.
    char*                                site                           0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":DataContainer is a complexType.
///
struct ns1__DataContainer
{
/// Size of array of struct ns1__DataRequestItem* is 0..unbounded.
   $int                                  __sizedatarequestitem          0;
/// Array struct ns1__DataRequestItem* of size 0..unbounded.
    struct ns1__DataRequestItem*         datarequestitem                0;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":DataRequestItem is a complexType.
///
struct ns1__DataRequestItem
{
/// Element "provider" of XSD type xs:string.
    char*                                provider                       1;	///< Required element.
/// Element "fileiditem" of XSD type "http://virtualsolar.org/VSO/VSOi":FileidItem.
    struct ns1__FileidItem*              fileiditem                     1;	///< Required element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":FileidItem is a complexType.
///
struct ns1__FileidItem
{
/// Size of array of char** is 1..unbounded.
   $int                                  __sizefileid                   1;
/// Array char** of size 1..unbounded.
    char**                               fileid                         1;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":VSOGetDataResponse is a complexType.
///
struct ns1__VSOGetDataResponse
{
/// Size of array of struct ns1__GetDataResponseItem* is 0..unbounded.
   $int                                  __sizegetdataresponseitem      0;
/// Array struct ns1__GetDataResponseItem* of size 0..unbounded.
    struct ns1__GetDataResponseItem*     getdataresponseitem            0;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":GetDataResponseItem is a complexType.
///
struct ns1__GetDataResponseItem
{
/// Element "version" of XSD type xs:string.
    char*                                version                        1;	///< Required element.
    struct _ns1__GetDataResponseItem_info
    {
/// Size of array of char** is 1..unbounded.
   $int                                  __sizeinfoitem                 1;
/// Array char** of size 1..unbounded.
    char**                               infoitem                       1;
    }                                   *info                           0;	///< Optional element.
/// Element "provider" of XSD type xs:string.
    char*                                provider                       0;	///< Optional element.
/// Element "getdataitem" of XSD type "http://virtualsolar.org/VSO/VSOi":GetDataItem.
    struct ns1__GetDataItem*             getdataitem                    0;	///< Optional element.
/// Element "status" of XSD type xs:string.
    char*                                status                         0;	///< Optional element.
/// Element "debug" of XSD type xs:string.
    char*                                debug                          0;	///< Optional element.
/// Element "details" of XSD type xs:string.
    char*                                details                        0;	///< Optional element.
/// Element "method" of XSD type "http://virtualsolar.org/VSO/VSOi":MethodItem.
    struct ns1__MethodItem*              method                         0;	///< Optional element.
};

/// @brief "http://virtualsolar.org/VSO/VSOi":GetDataItem is a complexType.
///
struct ns1__GetDataItem
{
/// Size of array of struct ns1__DataItem* is 0..unbounded.
   $int                                  __sizedataitem                 0;
/// Array struct ns1__DataItem* of size 0..unbounded.
    struct ns1__DataItem*                dataitem                       0;
};

/// @brief "http://virtualsolar.org/VSO/VSOi":DataItem is a complexType.
///
struct ns1__DataItem
{
/// Element "provider" of XSD type xs:string.
    char*                                provider                       1;	///< Required element.
/// Element "url" of XSD type xs:string.
    char*                                url                            0;	///< Optional element.
/// Element "fileiditem" of XSD type "http://virtualsolar.org/VSO/VSOi":FileidItem.
    struct ns1__FileidItem*              fileiditem                     1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://virtualsolar.org/VSO/VSOi                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://virtualsolar.org/VSO/VSOi                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	VSOiBinding 
//gsoap ns1  service type:	VSOiPort 
//gsoap ns1  service port:	http://VSO.tuc.noao.edu/cgi-bin/VSO/DEV_SOAP/bin/vsoi_wsdl.cgi 
//gsoap ns1  service port:	http://vso.nso.edu/cgi-bin/VSO/PROD/vsoi_wsdl.cgi 
//gsoap ns1  service namespace:	http://virtualsolar.org/VSO/VSOi 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage VSO Definitions

@section VSO_bindings Service Bindings

  - @ref VSOiBinding

@section VSO_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page VSOiBinding Binding "VSOiBinding"

@section VSOiBinding_operations Operations of Binding "VSOiBinding"

  - @ref ns1__Query

  - @ref ns1__GetData

@section VSOiBinding_ports Endpoints of Binding "VSOiBinding"

  - http://VSO.tuc.noao.edu/cgi-bin/VSO/DEV_SOAP/bin/vsoi_wsdl.cgi

  - http://vso.nso.edu/cgi-bin/VSO/PROD/vsoi_wsdl.cgi

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   VSOiBinding                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Query                                                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__QueryResponse_" of operation "ns1__Query".
struct ns1__QueryResponse_
{
    struct ns1__QueryResponse*          body;
};

/** Operation "ns1__Query" of service binding "VSOiBinding".

  - SOAP literal messaging

  - Action: "http://virtualsolar.org/VSO/VSOi#Query"

  - Addressing input action: "http://virtualsolar.org/VSO/VSOi#Query"

  - Addressing output action: "http://virtualsolar.org/VSO/VSOi#QueryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Query(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__QueryRequest*           body,
    // output parameters:
    struct ns1__QueryResponse_*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Query(
    struct soap *soap,
    // input parameters:
    struct ns1__QueryRequest*           body,
    // output parameters:
    struct ns1__QueryResponse_*
  );
@endcode

*/

//gsoap ns1  service method-protocol:	Query SOAP
//gsoap ns1  service method-style:	Query rpc
//gsoap ns1  service method-encoding:	Query literal
//gsoap ns1  service method-input-action:	Query http://virtualsolar.org/VSO/VSOi#Query
//gsoap ns1  service method-output-action:	Query http://virtualsolar.org/VSO/VSOi#QueryResponse
int ns1__Query(
    struct ns1__QueryRequest*           body,	///< Input parameter
    struct ns1__QueryResponse_         *	///< Output response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__GetData                                                             *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__GetDataResponse" of operation "ns1__GetData".
struct ns1__GetDataResponse
{
    struct ns1__VSOGetDataResponse*     body;
};

/** Operation "ns1__GetData" of service binding "VSOiBinding".

  - SOAP literal messaging

  - Action: "http://virtualsolar.org/VSO/VSOi#GetData"

  - Addressing input action: "http://virtualsolar.org/VSO/VSOi#GetData"

  - Addressing output action: "http://virtualsolar.org/VSO/VSOi#GetDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__GetData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct ns1__VSOGetDataRequest*      body,
    // output parameters:
    struct ns1__GetDataResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__GetData(
    struct soap *soap,
    // input parameters:
    struct ns1__VSOGetDataRequest*      body,
    // output parameters:
    struct ns1__GetDataResponse*
  );
@endcode

*/

//gsoap ns1  service method-protocol:	GetData SOAP
//gsoap ns1  service method-style:	GetData rpc
//gsoap ns1  service method-encoding:	GetData literal
//gsoap ns1  service method-input-action:	GetData http://virtualsolar.org/VSO/VSOi#GetData
//gsoap ns1  service method-output-action:	GetData http://virtualsolar.org/VSO/VSOi#GetDataResponse
int ns1__GetData(
    struct ns1__VSOGetDataRequest*      body,	///< Input parameter
    struct ns1__GetDataResponse        *	///< Output response struct parameter
);

/**

@page VSOiBinding Binding "VSOiBinding"

@section VSOiBinding_policy_enablers Policy Enablers of Binding "VSOiBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://virtualsolar.org/VSO/VSOi"

*/

/* End of vso.h */
